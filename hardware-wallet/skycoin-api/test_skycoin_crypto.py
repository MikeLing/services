import unittest
from skycoin_crypto import *


class TestSkycoinCrypto(unittest.TestCase):
    def test_sign(self):
        skycoin = SkycoinCrypto()
        digest = create_string_buffer(b'\x00\x1a\xa9\xe4\x16\xaf\xf5\xf3\xa3\xc7\xf9\xae\x08\x11\x75\x7c\xf5\x4f\x39\x3d\x50\xdf\x86\x1f\x5c\x33\x74\x79\x54\x34\x1a\xa7')
        seckey = create_string_buffer(b'\x59\x7e\x27\x36\x86\x56\xca\xb3\xc8\x2b\xfc\xf2\xfb\x07\x4c\xef\xd8\xb6\x10\x17\x81\xa2\x77\x09\xba\x1b\x32\x6b\x73\x8d\x2c\x5a')
        sign = skycoin.EcdsaSkycoinSign(digest, seckey)
        self.assertEqual(binascii.hexlify(sign), binascii.hexlify(b'\x79\xbe\x66\x7e\xf9\xdc\xbb\xac\x55\xa0\x62\x95\xce\x87\x0b\x07\x02\x9b\xfc\xdb\x2d\xce\x28\xd9\x59\xf2\x81\x5b\x16\xf8\x17\x98\x04\x64\x1a\x74\x72\xbb\x90\x64\x7f\xa6\x0b\x4d\x30\xae\xf8\xc7\x27\x9e\x4b\x68\x22\x6f\x7b\x27\x13\xda\xb7\x12\xef\x12\x2f\x8b\x01'))

        digest = create_string_buffer(b'\x00\x1a\xa9\xe4\x16\xaf\xf5\xf3\xa3\xc7\xf9\xae\x08\x11\x75\x7c\xf5\x4f\x39\x3d\x50\xdf\x86\x1f\x5c\x33\x74\x79\x54\x34\x1a\xa7')
        seckey = create_string_buffer(b'\x67\xa3\x31\x66\x90\x81\xd2\x26\x24\xf1\x65\x12\xea\x61\xe1\xd4\x4c\xb3\xf2\x6a\xf3\x33\x39\x73\xd1\x7e\x0e\x8d\x03\x73\x3b\x78')
        sign = skycoin.EcdsaSkycoinSign(digest, seckey, 0x1e2501ac)
        self.assertEqual(binascii.hexlify(sign), binascii.hexlify(b'\xee\xee\x74\x3d\x79\xb4\x0a\xaa\x52\xd9\xee\xb4\x87\x91\xb0\xae\x81\xa2\xf4\x25\xbf\x99\xcd\xbc\x84\x18\x0e\x8e\xd4\x29\x30\x0d\x45\x7e\x8d\x66\x9d\xbf\xf1\x71\x6b\x12\x35\x52\xba\xf6\xf6\xf0\xef\x67\xf1\x6c\x1d\x9c\xcd\x44\xe6\x78\x5d\x42\x40\x02\x21\x26\x01'))



if __name__ == '__main__':
    unittest.main()